plugins {
	// https://github.com/researchgate/gradle-release
	id 'net.researchgate.release' version '2.1.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
// too chatty apply plugin: 'checkstyle'
apply plugin: 'codenarc'
// does not observe excludes: apply plugin: 'findbugs'
// did not provide useful warnings: apply plugin: 'pmd'
// not used currently: apply plugin: 'jdepend'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7
group = "org.dstadler"
archivesBaseName = "commons-dost"

repositories {
	mavenCentral()
}

eclipse {
	project {
		name = "commons-dost.git"
	}
}

dependencies {
	compile 'commons-io:commons-io:2.4'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.httpcomponents:httpclient:4.4.1'	// 4.5 fails in HtmlUnit!
	compile 'org.apache.commons:commons-exec:1.3'
	compile 'com.google.guava:guava:18.0'   
	compile 'log4j:log4j:1.2.17'
	compile 'net.java.dev.jna:jna:3.4.0'

	// for TestHelpers we need junit during normal compile...
	testCompile "junit:junit:[4.12,)"
	
	testCompile 'org.dstadler:commons-test:1.0.0.3'
}

// work around unnecessary timestamp in generated file which always causes dirty files in version control
// https://issues.gradle.org/browse/GRADLE-2293
task adjustEclipseSettingsFile << {
   ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
      fileset(dir: project.projectDir, includes: '.settings/org.eclipse.jdt.core.prefs')
   }
}
task sortEclipseSettingsFile << {
   new File(project.projectDir, '.settings/org.eclipse.jdt.core.prefs').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
}
eclipseJdt.finalizedBy adjustEclipseSettingsFile
eclipseJdt.finalizedBy sortEclipseSettingsFile

test {
	systemProperties = System.properties

	// enable to show standard out and standard error of the test JVM(s) on the console
	// testLogging.showStandardStreams = true

	// http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
	systemProperties['user.dir'] = workingDir
}

jacoco {
	toolVersion = "0.7.4.201502262128"
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.5'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

//provide defaults so we do not need to specify them always
if (!project.hasProperty("ossrhUsername")) {
    ext.ossrhUsername = ""
}
if (!project.hasProperty("ossrhPassword")) {
    ext.ossrhPassword = ""
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Common Utilities'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'Common utilities I find useful in many of my projects.'
        url 'https://github.com/centic9/commons-dost'

        scm {
          connection 'scm:git@github.com:centic9/commons-dost.git'
          developerConnection 'scm:git@github.com:centic9/commons-dost.git'
          url 'https://github.com/centic9/commons-dost'
        }

        licenses {
          license {
            name 'BSD 2-Clause License'
            url 'http://www.opensource.org/licenses/bsd-license.php'
          }
        }

        developers {
          developer {
            id 'centic9	'
            name 'Dominik Stadler'
          }
        }
      }
    }
  }
}

afterReleaseBuild.dependsOn uploadArchives
