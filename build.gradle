buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.thetaphi:forbiddenapis:3.7'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    // https://github.com/researchgate/gradle-release
    id 'net.researchgate.release' version '3.0.2'
    // https://github.com/Codearte/gradle-nexus-staging-plugin
    id 'io.codearte.nexus-staging' version '0.30.0'

    // https://gradle-pitest-plugin.solidsoft.info/
    id 'info.solidsoft.pitest' version '1.9.11'
}

apply plugin: 'de.thetaphi.forbiddenapis'
apply plugin: 'jacoco'
// too chatty apply plugin: 'checkstyle'
apply plugin: 'codenarc'
// does not observe excludes: apply plugin: 'findbugs'
// did not provide useful warnings: apply plugin: 'pmd'
// not used currently: apply plugin: 'jdepend'
apply plugin: 'signing'

sourceCompatibility = JavaVersion.VERSION_11
group = 'org.dstadler'
archivesBaseName = 'commons-dost'

repositories {
    mavenCentral()
}

forbiddenApis {
    suppressAnnotations = ['org.dstadler.commons.util.SuppressForbidden']
    bundledSignatures = [ 'jdk-reflection', 'commons-io-unsafe-2.15.1', 'jdk-internal' ]
    signaturesFiles += files('config/forbidden-apis/http-signatures.txt')
}

forbiddenApisMain {
    // 'jdk-unsafe', 'jdk-system-out'
    bundledSignatures += [ 'jdk-deprecated', 'jdk-internal', 'jdk-non-portable' ]
    signaturesFiles += files('config/forbidden-apis/forbidden.signatures.txt')
}

dependencies {
    implementation 'commons-io:commons-io:2.17.0'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-text:1.12.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpasyncclient:4.1.5'
    implementation 'org.apache.commons:commons-exec:1.4.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.0'
    implementation 'net.java.dev.jna:jna:3.4.0'

    testImplementation 'org.junit.vintage:junit-vintage-engine:5.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testImplementation 'org.dstadler:commons-test:1.0.0.21'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.24.0'
}

wrapper {
    gradleVersion = '8.5'
}

test {
    // required for LoggerFactoryTest to succeed on JDK 17
    jvmArgs = ['--add-opens', 'java.logging/java.util.logging=ALL-UNNAMED']

    maxHeapSize = "64m"
    systemProperties = System.properties

    // enable to show standard out and standard error of the test JVM(s) on the console
    // testLogging.showStandardStreams = true

    // http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
    systemProperties['user.dir'] = workingDir

    // avoid failures because Gradle provides it's own version of JNA in the system properties
    systemProperties['jna.boot.library.path'] = null

    useJUnitPlatform()
}

test.dependsOn jar

jacoco {
    toolVersion = '0.8.11'
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

tasks.register('sourcesJar', Jar) {
	archiveClassifier = 'sources'
	from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
	archiveClassifier = 'javadoc'
	from javadoc
}

java {
    withJavadocJar()
    withSourcesJar()
}

release {
    git {
        requireBranch.set('master')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java

            pom {
                name = 'Common Utilities'
                description = 'Common utilities I find useful in many of my projects.'
                url = 'https://github.com/centic9/commons-dost'
                licenses {
                    license {
                        name = 'BSD 2-Clause "Simplified" License'
                        url = 'https://github.com/centic9/commons-dost/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'centic9'
                        name = 'Dominik Stadler'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:centic9/commons-dost'
                    developerConnection = 'scm:git@github.com:centic9/commons-dost'
                    url = 'https://github.com/centic9/commons-dost'
                }
            }
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            //url = layout.buildDirectory.dir('repo')
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials(PasswordCredentials)
            //snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/')
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

afterReleaseBuild.dependsOn publish

// settings for the task 'closeAndReleaseRepository'
nexusStaging {
    // retrieved via Gradle Task 'getStagingProfile'
    stagingProfileId = 'b1687c5b3e1bd'

    // use a much longer timeout as Nexus is sometimes very slow
    numberOfRetries = 180
    delayBetweenRetriesInMillis = 30000
}
